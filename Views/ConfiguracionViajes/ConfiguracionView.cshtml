@{

    Layout = "~/Views/Shared/_Layout.cshtml";

}



@using Syncfusion.EJ2;

@using Syncfusion.EJ2.DropDowns;

@using ProyectoAlmaInicio.Models;

@using Syncfusion.EJ2.Inputs;

@model ProyectoAlmaInicio.Controllers.ConfiguracionViajes.ConfiguracionViajesController.TextBoxModal



<div class="main-content e-responsive" id="main-text">

    <div class="sidebar-content sidebar" style="min-height: 500px">



        <div class="col-lg-12 control-section toast-default-section" hidden>

            <div class="control_wrapper">

                @Html.EJS().Toast("toast_type").Position(p => p.X("Right")).TimeOut(5000).Close("onclose").Created("created").BeforeOpen("onBeforeOpen").Render()

                <div id="toast_types">

                    <div>

                        @Html.EJS().Button("info_Toast").CssClass("e-btn e-control e-info").Content("Info Message").Render()

                        @Html.EJS().Button("success_Toast").CssClass("e-btn e-contro e-success").Content("Success Message").Render()

                        @Html.EJS().Button("warning_Toast").CssClass("e-btn e-control e-warning").Content("Warning Message").Render()

                        @Html.EJS().Button("error_Toast").CssClass("e-btn e-control e-danger").Content("Danger Message").Render()

                    </div>

                    <div style="padding-top: 15px">

                        @Html.EJS().Button("hideToast").CssClass("e-btn e-control").Content("Hide All").Render()

                    </div>

                </div>

            </div>

        </div>



        <!--<h4 class="h4 tr" key="configuracionViajes">CONFIGURACIÓN DE VIAJES</h4>

        <hr style="border-width: medium;" />



        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12" style="border: 1px gray solid; border-radius: 5px; padding: 10px 10px 10px 10px;">

            <label class="tr" key="finalizacionViajes"> Finalización de Viajes </label>

            <div>

                <div style="display:inline-block">

                    <h5 class="h5 tr" key="finalizacionAutomatica"> Finalización Automática  &nbsp;</h5>

                </div>



                <div style="display:inline-block;">-->
        @*@Html.EJS().Tooltip("TooltipInformativo").Content("La finalización de viaje provocará que la información del viaje (datos del gráfico y mapa) se muestre hasta el momento de finalización, además los servicios serán visible únicamente en históricos. La finalización de viajes puede parametrizarse como el cumplimiento de ETA o por detección de apertura de puertas en el viaje.").ContentTemplate(@<i class="fa fa-info-circle fa-lg" style="color: #4AB973; font-size: 2em;"></i>).Render()*@

        <!--</div>



        <div style="display:block">-->
        @*@Html.EJS().Switch("switch_finalizacion_automatica").Change("accion_switch").Render()*@

        <!--</div>

        </div>



        <div id="div-finalizacion-automatica-viajes" style="display:none">

            <h5 class="h5 tr" key="agregarCondicionFinalizacion">Agregar Condición de Finalización:</h5>





            <div id="div-condiciones-fin-viajes1" class="col-xs-12 col-sm-6 col-lg-6 col-md-6 row" style="margin-bottom:10px;">



                <div class="col-xs-11 col-sm-11 col-lg-11 col-md-11 row">-->
        @*@Html.EJS().ComboBox("condiciones_finalizacion_viajes").Placeholder("Seleccione una condición").AllowFiltering(true).DataSource((IEnumerable<object>)ViewBag.condiciones_finalizacion_viajes).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Change("CambioCondicionFinViajes1").Render()*@



        <!--<div id="ingresar-cantidad-condicion1" style="display:none; padding: 10px 0px 0px 0px;">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 10px 0px 0px;">

                <p class="tr" key="" style="text-align:right;">Cantidad de Días:</p>

            </div>

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 0px 0px 0px;">

                <input id="cantidad_condicion1" class="e-input e-control" type="text" placeholder="N° Días">

            </div>

        </div>



        <div id="ingresar-fecha-condicion1" style="display:none; padding: 10px 0px 0px 0px;">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 10px 0px 0px;">

                <p style="text-align:right;">Fecha:</p>

            </div>

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 0px 0px 0px;">-->
        @*@Html.EJS().DatePicker("fecha_condicion1").Placeholder("DD/MM/YYYY").Render()*@

        <!--</div>

            </div>

        </div>



        <div class="col-xs-1 col-sm-1 col-lg-1 col-md-1 row" style="margin-left:10px;">-->
        @*@Html.EJS().Tooltip("TooltipAgregarOtraCondicion").Content("Agregar / Quitar segunda condición").ContentTemplate(@<div>*@

        <!--<!-- Target element  -->
        <!--@*@Html.EJS().Button("btn-otra-condicion").Content("+").Render()*@

                <!--</div>).Render()

            </div>

        </div>







        <div id="div-condiciones-fin-viajes2" class="col-xs-12 col-sm-6 col-lg-6 col-md-6 row" style="display:none; margin-bottom:10px;">



            <div id="boton-tipo-condicion" style="display:none; margin-bottom:10px;" class="col-xs-12 col-sm-3 col-lg-3 col-md-3 row">-->
        @*@Html.EJS().Tooltip("TooltipTipoCondicion").Content("Seleccione (Y) si ambas opciones se deben cumplir, y (O) si solo basta que una se cumpla para finalizar el viaje.").ContentTemplate(@<div>*@

        <!--<!-- Target element  -->
        <!--@*@Html.EJS().Button("btn-tipo-condicion").Content(" AND").IconCss("fa fa-exchange").Render()*@

            <!--</div>).Render()

        </div>



        <div class="col-xs-12 col-sm-9 col-lg-9 col-md-9 row">-->
        @*@Html.EJS().ComboBox("condiciones_finalizacion_viajes2").Placeholder("Seleccione una segunda condición").AllowFiltering(true).DataSource((IEnumerable<object>)ViewBag.condiciones_finalizacion_viajes).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Change("CambioCondicionFinViajes2").Render()*@



        <!--<div id="ingresar-cantidad-condicion2" style="display:none; padding: 10px 0px 0px 0px;">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 10px 0px 0px;">

                <p style="text-align:right;">Cantidad de Días:</p>

            </div>

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 0px 0px 0px;">

                <input id="cantidad_condicion2" class="e-input e-control" type="text" placeholder="N° Días">

            </div>

        </div>



        <div id="ingresar-fecha-condicion2" style="display:none; padding: 10px 0px 0px 0px;">

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 10px 0px 0px;">

                <p style="text-align:right;">Fecha:</p>

            </div>

            <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6" style="padding: 0px 0px 0px 0px;">-->
        @*@Html.EJS().DatePicker("fecha_condicion2").Placeholder("DD/MM/YYYY").Render()*@

        @*</div>

                            </div>

                        </div>

                    </div>



                    <div id="div-btn-guardar-finalizacion-viajes" class="col-xs-12 col-sm-12 col-lg-12 col-md-12" style="text-align:center; padding: 20px 0px 10px 0px;">

                        <input id="btn-guardar-finalizacion-viajes" class="e-control e-btn e-primary tr" key="botonGuardar" type="button" value="Guardar" onclick="accionGuardarCondicionFinalizacionViajes()">

                    </div>

                    <div id="div-btn-editar-finalizacion-viajes" class="col-xs-12 col-sm-12 col-lg-12 col-md-12" style="text-align:center; padding: 20px 0px 10px 0px; display:none;">

                        <input id="btn-editar-finalizacion-viajes" class="e-control e-btn e-primary tr" key="botonEditar" type="button" value="Editar" onclick="accionEditarCondicionFinalizacionViajes()">

                    </div>

                </div>

            </div>



            <div class="row"><p> &nbsp; </p></div>

            <div class="row"><p> &nbsp; </p></div>-->*@







        <h4 class="h4 tr" key="configuracionViajes"> CONFIGURACIÓN DE NOTIFICACIONES  </h4>

        <hr style="border-width: medium;" />



        <div align="left">

            <button class="e-control e-btn e-success tr" data-toggle="modal" id="" data-target="#myModal1" style="display:initial; margin: 0px 0px 0px 0px;">

                <p style="display:inline;">

                    Crear Configuración Notificaciones&nbsp;

                </p>

                <!--<span style="font-size: 2em; color: rgb(74, 185, 115);">

                    <i class="fa fa-cloud-upload icono"></i>

                </span>-->

            </button>

        </div>



        <div class="row">

            <div class="control-section col-lg-12">

                <span id='msg'></span>



                @(Html.EJS().Grid<Clases.PerfilNotificacion>("AgendaPerfiles").DataSource((IEnumerable<Clases.PerfilNotificacion>)ViewBag.listaNotificaciones).FilterSettings(filter => filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel)).AllowSelection()

                    .Columns(col =>

                    {

                        col.Field("").HeaderText("Editar").Template("#templateEditar").Width("92").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                        col.Field("").HeaderText("Eliminar").Template("#templateEliminar").Width("92").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                        col.Field(p => p.commodity).HeaderText("Commodity").Width("200").Width("325").Add();

                        col.Field(p => p.variacion_sup_temp).HeaderText("Variación Superior T°").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                        col.Field(p => p.variacion_inf_temp).HeaderText("Variación Inferior T°").Width("185").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                        col.Field(p => p.activo).HeaderText("ON/OFF").Width("80").Type("text").Width("135").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                        col.Field("").HeaderText("Encender o Apagar").Template("#templateCheckBox").Width("192").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();



                    }).AllowResizing(true).AllowReordering().Locale("es-ES").AllowSorting(true).EnablePersistence(true).AllowPaging(true).PageSettings(page => page.PageCount(5)).AllowFiltering(true).SelectionSettings(select => select.CellSelectionMode(Syncfusion.EJ2.Grids.CellSelectionMode.Flow).Mode(Syncfusion.EJ2.Grids.SelectionMode.Cell).Type(Syncfusion.EJ2.Grids.SelectionType.Single)).Render())

            </div>

        </div>



        <script id="templateCheckBox" type="text/x-template">

            <button onclick="accionOnOff(this)" id="botonEditarEstado" data-toggle="modal" value="${idPerfilNotificacion}-${activoTrue}" title="Editar Estado Notificacion" class="btn fa fa-power-off" style="background:white; border:1px gray solid; padding: 2px 10px 2px 10px;"></button>

        </script>





        <script id="templateEditar" type="text/x-template">

            <button onclick="accionEditarPerfilNotificacion(this)" id="botonEditar" data-toggle="modal" value="${idPerfilNotificacion}" title="Editar Notificacion" class="btn fa fa-edit" style="background:white; border:1px gray solid; padding: 2px 10px 2px 10px;"></button>

        </script>



        <script id="templateEliminar" type="text/x-template">

            <button onclick="accionEliminarPerfilNotificacion(this)" id="botonBorrar" value="${idPerfilNotificacion}" title="Borrar Notificacion" class="btn fa fa-trash" style="background:white; border:1px gray solid; padding: 2px 10px 2px 10px;"></button>

        </script>







    </div>



    <div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" align="left" style="margin-left:80px; margin-right:10px;">

        <div class="modal-dialog modal-lg" role="document">

            <div class="modal-content" style="width:50%">

                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                    <h4 class="h4 modal-title tr" key="agregarPerfilNotificacion" id="myModalLabel3">CREAR CONFIGURACION NOTIFICACION</h4>

                </div>



                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">



                    @*@using (Html.BeginForm("CrearPerfilNotificacion", "ConfiguracionViajes", FormMethod.Post, new { id = "form_agregar" }))

                        {

                            @Html.ValidationSummary(true)*@

                    <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12 control-section">

                        <div id="wrapper" style="margin-top: 20px;">

                            <!--<h5 class="h5 tr" key="datosNotificacion">DATOS DE LA NOTIFICACION</h5>

                            <hr style="border-width: medium;" />-->

                            <div class="alert alert-info row">

                                <i class="glyphicon glyphicon-info-sign fa-2x" style="vertical-align:middle;"></i>

                                <span class="tr" key="camposObligatorios" style="vertical-align:middle;">Los campos que poseen un (*) son obligatorios.</span>

                            </div>





                            <div class="div1">

                                <h5 class="h5 tr" key="parametrosGenerales">PARAMETROS GENERALES</h5>

                                <hr style="border-width: medium;" />



                                <div class="row">

                                    <div id="div-commodity_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                        @Html.EJS().ComboBox("commodity_agregar").Placeholder("Commodity").FloatLabelType(FloatLabelType.Auto).AllowFiltering(true).Filtering("onfilteringCommodity_agregar").DataSource((IEnumerable<object>)ViewBag.lista_commodities).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Enabled(true).Render()

                                    </div>

                                    @*<div id="div-nombre_perfil_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                                @Html.EJS().TextBoxFor(model => model.nombrePerfil).Placeholder("Nombre Perfil (*)").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()

                                            </div>



                                        <div id="div-commodity_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().ComboBox("commodity_agregar").Placeholder("Commodity").FloatLabelType(FloatLabelType.Auto).AllowFiltering(true).Filtering("onfilteringCommodity_agregar").DataSource((IEnumerable<object>)ViewBag.lista_commodities).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Enabled(true).Render()

                                        </div>*@

                                </div>

                                <div class="row"><br /></div>



                                <h5 class="h5 tr" key="parametrizacionNotificaciones">PARAMETRIZACION NOTIFICACIONES</h5>

                                <hr style="border-width: medium;" />



                                <div class="row">



                                    <div id="div-setpoint_temp" class="col-xs-3 col-sm-3 col-lg-3 col-md-3">

                                        @*@Html.EJS().TextBoxFor(model => model.variacion_sup_temp, new { max = 8, min = 1 }).Placeholder("Variación superior T°").Type("number").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()*@

                                        @Html.EJS().NumericTextBox("variacion_sup_temp").Format("0.0").Min(1.0).Max(8.0).Step(0.1).Placeholder("Variación superior T°").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto).Render()



                                    </div>

                                    <div id="div-setpoint_temp" class="col-xs-3 col-sm-3 col-lg-3 col-md-3">

                                        @*@Html.EJS().TextBoxFor(model => model.variacion_inf_temp, new { max = 8, min = 1 }).Placeholder("Variación inferior T°").Type("number").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()*@

                                        @Html.EJS().NumericTextBox("variacion_inf_temp").Format("0.0").Min(1.0).Max(8.0).Step(0.1).Placeholder("Variación inferior T°").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto).Render()



                                    </div>

                                    <div id="div-frecuencia_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                        @Html.EJS().ComboBox("frecuencia_agregar").Placeholder("Frecuencia de envío de notificaciones").FloatLabelType(FloatLabelType.Auto).AllowFiltering(true).DataSource((IEnumerable<object>)ViewBag.lista_frecuencias).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Enabled(true).Render()

                                    </div>

                                </div>



                                <div class="row"><br /></div>



                                <h5 class="h5 tr" key="parametrizacionNotificaciones">CONTACTO NOTIFICACIONES</h5>

                                <hr style="border-width: medium;" />



                                @*<div class="row">



                                        <div id="div-nombre_contacto_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().TextBoxFor(model => model.nombre_contacto).Placeholder("Nombre").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()



                                        </div>

                                        <div id="div-empresa_contacto_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().TextBoxFor(model => model.empresa_contacto).Placeholder("Empresa").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()

                                        </div>





                                        <div id="div-email_contacto_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().TextBoxFor(model => model.email_contacto).Placeholder("Email").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()



                                        </div>

                                        <div id="div-cargo_contacto_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().TextBoxFor(model => model.cargo_contacto).Placeholder("Cargo").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()

                                        </div>



                                        <input id="btn-agregar_contacto" class="e-control e-btn e-success tr" key="botonContacto" type="button" value="Agregar">



                                    </div>*@



                                <div class="col-lg-12 control-section">

                                    @(Html.EJS().Grid<Clases.Contacto>

                                                                                                                ("InlineEditing").DataSource((IEnumerable<Clases.Contacto>

                                                                                                                    )ViewBag.lista_contactos).FilterSettings(filter => filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel)).AllowSelection()

                                                                                                                    .Columns(col =>

                                                                                                                    {



                                                                                                                        col.Field(c => c.nombre_contacto).HeaderText("Nombre Contacto").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();

                                                                                                                        col.Field(c => c.empresa_contacto).HeaderText("Empresa Contacto").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();

                                                                                                                        col.Field(c => c.email_contacto).HeaderText("Email Contacto").Width("150").ValidationRules(new { required = true, minLength = 8 }).Add();

                                                                                                                        col.Field(c => c.cargo_contacto).HeaderText("Cargo Contacto").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();



                                                                                                                    }).ActionBegin("actionBegin").Locale("es-ES").AllowPaging().PageSettings(page => page.PageCount(2)).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()) <!-- "Agregar", "Editar", "Eliminar", "Guardar", "Cancelar" -->



                                </div>





                            </div>

                            <br />

                        </div>

                    </div>

                    @*}*@



                </div>

                @*

                    </div>*@

                <div class="modal-footer d-flex justify-content-center">

                    <div id="submitbutton" align="center">

                        <input id="btn-agregar-notificacion" class="e-control e-btn e-success tr" key="botonGuardar" type="button" value="Guardar">

                        <!--<input id="btn-limpiar_agregar" class="e-control e-btn e-lib tr" key="botonLimpiar" type="button" value="Limpiar">-->

                    </div>

                </div>

            </div>

        </div>

    </div>



    <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" align="left" style="margin-left:80px; margin-right:10px;">

        <div class="modal-dialog modal-lg" role="document">

            <div class="modal-content" style="width:50%">

                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                    <h4 class="h4 modal-title tr" key="editarPerfilNotificacion" id="myModalLabel3">EDITAR CONFIGURACION NOTIFICACION</h4>

                </div>



                <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">



                    @*@using (Html.BeginForm("EditarPerfilNotificacion", "ConfiguracionViajes", FormMethod.Post, new { id = "form_agregar" }))

                        {

                            @Html.ValidationSummary(true)*@

                    <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12 control-section">

                        <div id="wrapper" style="margin-top: 20px;">

                            <!--<h5 class="h5 tr" key="datosNotificacion">DATOS DE LA NOTIFICACION</h5>

                            <hr style="border-width: medium;" />-->

                            <div class="alert alert-info row">

                                <i class="glyphicon glyphicon-info-sign fa-2x" style="vertical-align:middle;"></i>

                                <span class="tr" key="camposObligatorios" style="vertical-align:middle;">Los campos que poseen un (*) son obligatorios.</span>

                            </div>





                            <div class="div1">

                                <h5 class="h5 tr" key="parametrosGenerales">PARAMETROS GENERALES</h5>

                                <hr style="border-width: medium;" />



                                <div class="row">



                                    @*<div id="div-nombre_perfil_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                            @Html.EJS().TextBoxFor(model => model.nombrePerfil).Placeholder("Nombre Perfil (*)").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()

                                        </div>*@

                                    <div id="div-commodity_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                        @Html.EJS().ComboBox("commodity_editar").Placeholder("Commodity").FloatLabelType(FloatLabelType.Auto).AllowFiltering(true).Filtering("onfilteringCommodity_agregar").DataSource((IEnumerable<object>)ViewBag.lista_commodities).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Enabled(true).Render()

                                    </div>

                                </div>

                                <div class="row"><br /></div>



                                <h5 class="h5 tr" key="parametrizacionNotificaciones">PARAMETRIZACION NOTIFICACIONES</h5>

                                <hr style="border-width: medium;" />



                                <div class="row">

                                    <div id="div-setpoint_temp" class="col-xs-3 col-sm-3 col-lg-3 col-md-3">

                                        @*@Html.EJS().TextBoxFor(model => model.variacion_sup_temp_editar, new { max = 8, min = 1 }).Type("number").Placeholder("Variación superior T°").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()*@

                                        @Html.EJS().NumericTextBox("variacion_sup_temp_editar").Format("0.0").Min(1.0).Max(8.0).Step(0.1).Placeholder("Variación superior T°").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto).Render()



                                    </div>

                                    <div id="div-setpoint_temp" class="col-xs-3 col-sm-3 col-lg-3 col-md-3">

                                        @*@Html.EJS().TextBoxFor(model => model.variacion_inf_temp_editar, new { max = 8, min = 1 }).Type("number").Placeholder("Variación inferior T°").FloatLabelType(FloatLabelType.Auto).Enabled(true).Render()*@

                                        @Html.EJS().NumericTextBox("variacion_inf_temp_editar").Format("0.0").Min(1.0).Max(8.0).Step(0.1).Placeholder("Variación inferior T°").FloatLabelType(Syncfusion.EJ2.Inputs.FloatLabelType.Auto).Render()



                                    </div>

                                    <div id="div-frecuencia_agregar" class="col-xs-6 col-sm-6 col-lg-6 col-md-6">

                                        @Html.EJS().ComboBox("frecuencia_editar").Placeholder("Frecuencia de envío de notificaciones").FloatLabelType(FloatLabelType.Auto).AllowFiltering(true).DataSource((IEnumerable<object>)ViewBag.lista_frecuencias).Fields(new ComboBoxFieldSettings { Text = "Name", Value = "Code" }).Enabled(true).Render()

                                    </div>

                                </div>



                                <div class="row"><br /></div>



                                <h5 class="h5 tr" key="parametrizacionNotificaciones">CONTACTO NOTIFICACIONES</h5>

                                <hr style="border-width: medium;" />



                                <div class="col-lg-12 control-section">

                                    @(Html.EJS().Grid<Clases.Contacto>

                                                                        ("EditarContactos").DataSource((IEnumerable<Clases.Contacto>)ViewBag.lista_contactos_editar).FilterSettings(filter => filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel)).AllowSelection()

                                                                            .Columns(col =>

                                                                            {



                                                                                col.Field(c => c.nombre_contacto).HeaderText("Nombre Contacto").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();

                                                                                col.Field(c => c.empresa_contacto).HeaderText("Empresa Contacto").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();

                                                                                col.Field(c => c.email_contacto).HeaderText("Email Contacto").Width("150").ValidationRules(new { required = true, minLength = 8 }).Add();

                                                                                col.Field(c => c.cargo_contacto).HeaderText("Cargo Contacto").Width("150").ValidationRules(new { required = true, minLength = 3, email = true }).Add();



                                                                            }).ActionBegin("actionBegin").AllowPaging().Locale("es-ES").PageSettings(page => page.PageCount(2)).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()) <!-- "Agregar", "Editar", "Eliminar", "Guardar", "Cancelar" -->



                                </div>

                            </div>

                            <br />

                        </div>

                    </div>

                    @*}*@



                </div>

                @*

                    </div>*@

                <div class="modal-footer d-flex justify-content-center">

                    <div id="submitbutton" align="center">

                        <input id="btn-editar-notificacion" class="e-control e-btn e-success tr" key="botonEditar" type="button" value="Guardar">

                        <!-- <input id="btn-limpiar_agregar" class="e-control e-btn e-lib tr" key="botonLimpiar" type="button" value="Limpiar">-->





                    </div>

                </div>

                <div id="div-oculto" class="col-xs-12 col-sm-12 col-lg-12 col-md-12">

                    @Html.EJS().TextBoxFor(model => model.idPerfilNotificacion, new { @class = "hidden" }).Render()

                </div>

            </div>

        </div>

    </div>



    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal2" id="ModalEditarNotificacion" style="display:none;"></button>



    <br />

    <br />

    <br />

    <br />



</div>





<script>

    ej.base.L10n.load({

        "es-ES": {

            "grid": {



                "Add": "Agregar",

                "Edit": "Editar",

                "Cancel": "Cancelar",

                "Update": "Actualizar",

                "Delete": "Eliminar",

                "EmptyRecord": "No hay registros",

                "EditOperationAlert": "Debe seleccionar un registro para poder editar",

                "DeleteOperationAlert": "Debe seleccionar un registro para poder eliminar"



            },

            'pager': {

                'currentPageInfo': '{0} de {1} página(s)'

            }

        }

    });





</script>

<style>
    #typeddl {
        min-width: 100px;
    }
</style>

<script>

    /*function rowPositionChange(args) {

        var grid = document.getElementById("InlineEditing").ej2_instances[0];

        grid.editSettings.newRowPosition = this.value;

    }*/



    function actionBegin(args) {

        var grid = document.getElementById("InlineEditing").ej2_instances[0];

        if (args.requestType === 'save') {

            //if (grid.pageSettings.currentPage !== 1 && grid.editSettings.newRowPosition === 'Top') {

            args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - grid.pageSettings.pageSize;

            /*} else if (grid.editSettings.newRowPosition === 'Bottom') {

                args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - 1;

            }*/

        }

    }

</script>





<script type="text/javascript">

    var lang = getCookie("Lenguaje");



    var toast_titulo1 = '¡Información!';

    var toast_titulo2 = '¡Muy bien!';

    var toast_titulo3 = '¡Error!';

    var toast_titulo4 = '¡Información!';

    var toast_content1 = 'Ya existe una configuración guardada.';

    var toast_content2 = 'El perfil de notificaciones ha sido eliminado exitosamente.';

    var toast_content3 = 'El perfil de notificaciones no ha sido eliminado.';

    var toast_content4 = 'El perfil de notificaciones ha sido creado exitosamente.';

   var toast_content5 = 'El perfil de notificaciones no ha sido creado.';

    var toast_content6 = 'El perfil de notificaciones ha sido editado exitosamente.';

    var toast_content7 = 'El perfil de notificaciones no ha sido actualizado.';

    var toast_content8 = 'El perfil de notificaciones ha sido actualizado exitosamente.';

    var toast_content9 = 'El perfil de notificaciones para el commodity seleccionado ya existe.';



    if (lang === 'en') {

        toast_titulo1 = 'Warnings!';

        toast_titulo2 = 'Well done!';

        toast_titulo3 = 'Error!';

        toast_titulo4 = 'Information';

        toast_content1 = 'A saved configuration already exists.';

    }



    // TOAS FUNCTIONS

    var toasts = [

        { title: toast_titulo4, content: toast_content1, cssClass: 'e-toast-warning', icon: 'e-warning toast-icons' },

        { title: toast_titulo4, content: toast_content2, cssClass: 'e-toast-success', icon: 'e-success toast-icons' },

        { title: toast_titulo3, content: toast_content3, cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },

        { title: toast_titulo2, content: toast_content4, cssClass: 'e-toast-success', icon: 'e-success toast-icons' },

        { title: toast_titulo3, content: toast_content5, cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },

        { title: toast_titulo2, content: toast_content6, cssClass: 'e-toast-success', icon: 'e-success toast-icons' },

        { title: toast_titulo3, content: toast_content7, cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },

        { title: toast_titulo2, content: toast_content8, cssClass: 'e-toast-success', icon: 'e-success toast-icons' },

        { title: toast_titulo3, content: toast_content9, cssClass: 'e-toast-danger', icon: 'e-error toast-icons' }];





    var btnEleHide = document.getElementById('hideToast');

    var toastObj;

    var infoBtn = document.getElementById('info_Toast');

    var warnBtn = document.getElementById('warning_Toast');

    var successBtn = document.getElementById('success_Toast');

    var errorBtn = document.getElementById('error_Toast');



    document.onclick = function (e) {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        if (e.target !== infoBtn && e.target !== warnBtn && e.target !== successBtn && e.target !== errorBtn) {

            toastObj.hide('All');

        }

    };



    document.getElementById('hideToast').onclick = function () {

        toastObj.hide('All');

    };

    infoBtn.onclick = function () {

        toastObj.show(toasts[0]);

    };

    warnBtn.onclick = function () {

        toastObj.show(toasts[0]);

    };

    successBtn.onclick = function () {

        toastObj.show(toasts[0]);

    };

    errorBtn.onclick = function () {

        toastObj.show(toasts[0]);

    };



    var toastObj;

    function created() {

        toastObj = this;

    }

    function onclose(e) {

        if (e.toastContainer.childElementCount === 0) {

            btnEleHide.style.display = 'none';

        }

    }

    function onBeforeOpen() {

        btnEleHide.style.display = 'inline-block';

    }







    function onfilteringCommodity_agregar(e) {

        var commodity_agregar = document.getElementById('commodity_agregar').ej2_instances[0];

        var query = new ej.data.Query();

        query = (e.text !== '') ? query.where('Name', 'startswith', e.text, true) : query;

        e.updateData(commodity_agregar.dataSource, query);



        /*if (document.getElementById('nodata-commodity_agregar')) {

            document.getElementById('btn-commodity_agregar').onclick = function () {

                var customValue = (document.getElementById('commodity_agregar')).value;

                var newItem = { 'Name': customValue, 'Code': customValue };

                (commodity_agregar.dataSource).push(newItem);

                commodity_agregar.hidePopup();

                commodity_agregar.addItem(newItem);

                commodity_agregar.value = customValue;

            };

        }*/

    }



    @*var boton_agregar_contacto = document.getElementById('btn-agregar_contacto');

    boton_agregar_contacto.addEventListener("click", function () {





        var nombre_contacto = document.getElementById('nombre_contacto').ej2_instances[0];

        var empresa_contacto = document.getElementById('empresa_contacto').ej2_instances[0];

        var email_contacto = document.getElementById('email_contacto').ej2_instances[0];

        var cargo_contacto = document.getElementById('cargo_contacto').ej2_instances[0];



        if (nombre_contacto.value == "" || empresa_contacto.value == null || email_contacto.value == null || cargo_contacto.value == null) {



            if (nombre_contacto.value == "") {

                $("#nombre_contacto").css("border", "1px solid red");

            }

            if (empresa_contacto.value == "") {

                $("#empresa_contacto").css("border", "1px solid red");

            }

            if (email_contacto.value == "") {

                $("#email_contacto").css("border", "1px solid red");

            }

            if (cargo_contacto.value == "") {

                $("#cargo_contacto").css("border", "1px solid red");

            }

        } else {



            $.ajax({

                type: "POST",

                async: false,

                url: '@Url.Action("agregarContacto", "ConfiguracionViajes")',

                data: {

                    condicion1: parseInt(condiciones1.value),

                    tipo_condicion: 0,

                    condicion2: 0

                },

                success: function (response) {

                    if (response == 1 || response == 2) {





                    }

                }

            });



        }



    });*@



    var boton_guardar_agregar = document.getElementById('btn-agregar-notificacion');

    boton_guardar_agregar.addEventListener("click", function () {





        var commodity_agregar = document.getElementById('commodity_agregar').ej2_instances[0];



        var frecuencia_agregar = document.getElementById('frecuencia_agregar').ej2_instances[0];



        var variacion_sup_temp = document.getElementById('variacion_sup_temp').ej2_instances[0];

        var variacion_inf_temp = document.getElementById('variacion_inf_temp').ej2_instances[0];

        //var var_sup = 0;

        //var var_inf = 0;





        if (commodity_agregar.value == "" || frecuencia_agregar.value == null || variacion_sup_temp.value == null || variacion_inf_temp.value == null){



            /*if (nombrePerfil.value == "") {

                $("#nombrePerfil").css("border", "1px solid red");

            }*/

            if (commodity_agregar.value == "") {

                $("#commodity_agregar").css("border", "1px solid red");

            }



            if (frecuencia_agregar.value != "") {

                $("#frecuencia_agregar").css("border", "1px solid red");

            }

            if (variacion_sup_temp.value == "") {

                $("#variacion_sup_temp").css("border", "1px solid red");

            } /*else {

                var varsup = variacion_sup_temp.value;

                var var_sup = varsup.replace(/\./g, ",");

            }*/



            if (variacion_inf_temp.value == "") {

                $("#variacion_inf_temp").css("border", "1px solid red");

            }/* else {

                var varinf = variacion_inf_temp.value;

                var var_inf = varinf.replace(/\./g, ",");





            }*/









            var texto = '¡Faltan algunos campos obligatorios!';

            if (lang === 'en') {

                texto = '¡Some mandatory fields are missing!';

            }



            Swal.fire({

                icon: 'error',

                title: 'Oops...',

                text: texto,

            });

        }

        else {

            var titulo = '¿Seguro que deseas guardar la configuración de notificación?';

            var boton1 = 'Sí';

            var boton2 = 'No';

            if (lang === 'en') {

                titulo = 'Are you sure you want to save the notification settings?';

                boton1 = 'Yes';

                boton2 = 'No';

            }



            Swal.fire({

                title: titulo,

                icon: 'warning',

                showCancelButton: true,

                confirmButtonColor: '#3085d6',

                cancelButtonColor: '#d33',

                confirmButtonText: boton1,

                cancelButtonText: boton2

            }).then((result) => {

                if (result.value) {



                    var griddd = document.getElementById("InlineEditing").ej2_instances[0];

                    griddd.refresh();

                    var lista_contactos = griddd.dataSource;

                    var idPerfilNotificacion = 0;

                    var validar = 0;

                    //document.getElementById('form_agregar').submit();



                    $.ajax({

                        type: "POST",

                        url: '@Url.Action("CargaDatosNotificacion", "ConfiguracionViajes")',

                        dataType: 'json',

                        async: false,

                        data: {

                            commodity_agregar: commodity_agregar.value,

                            frecuencia_agregar: frecuencia_agregar.value,

                            variacion_sup_temp: variacion_sup_temp.value,

                            variacion_inf_temp: variacion_inf_temp.value

                        },

                        success: function (respuesta) {



                            idPerfilNotificacion = respuesta;//.idPerfilNotificacion;

                            //validar = respuesta.validar;

                        }

                    });



                    if (lista_contactos.length > 0 && idPerfilNotificacion != -1 && idPerfilNotificacion != 0) {



                        lista_contactos.forEach(



                            element => $.ajax({

                                type: "POST",

                                url: '@Url.Action("CargaContactoNotificacion", "ConfiguracionViajes")',

                                dataType: 'json',

                                async: false,

                                data: {

                                    idPerfilNotificacion: idPerfilNotificacion,

                                    cargo: element.cargo_contacto,

                                    empresa: element.empresa_contacto,

                                    nombre: element.nombre_contacto,

                                    email: element.email_contacto,

                                }

                            })

                        );

                    }



                    if (idPerfilNotificacion == 0) {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 6;

                    } else if (idPerfilNotificacion == -1) {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 9; //ya existe el commodity en bd

                    } else {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 5;

                    }

                }

            });

        }

    });





    var btn_editar_notificacion = document.getElementById('btn-editar-notificacion');

    btn_editar_notificacion.addEventListener("click", function () {





        var commodity_editar = document.getElementById("commodity_editar").ej2_instances[0];

        var frecuencia_editar = document.getElementById("frecuencia_editar").ej2_instances[0];

        var variacion_sup_temp_editar = document.getElementById("variacion_sup_temp_editar").ej2_instances[0];

        var variacion_inf_temp_editar = document.getElementById("variacion_inf_temp_editar").ej2_instances[0];

        var idPerfilNotificacionOculto = document.getElementById("idPerfilNotificacion").ej2_instances[0];



        if (commodity_editar.value == "" || frecuencia_editar.value == null || variacion_sup_temp_editar.value == null || variacion_inf_temp_editar.value == null){



            if (commodity_editar.value == "") {

                $("#commodity_editar").css("border", "1px solid red");

            }

            if (frecuencia_editar.value != "") {

                $("#frecuencia_editar").css("border", "1px solid red");

            }

            if (variacion_sup_temp_editar.value == "") {

                $("#variacion_sup_temp_editar").css("border", "1px solid red");

            }

            if (variacion_inf_temp_editar.value == "") {

                $("#variacion_inf_temp_editar").css("border", "1px solid red");

            }



            var texto = '¡Faltan algunos campos obligatorios!';

            if (lang === 'en') {

                texto = '¡Some mandatory fields are missing!';

            }



            Swal.fire({

                icon: 'error',

                title: 'Oops...',

                text: texto,

            });

        }

        else {

            var titulo = '¿Seguro que deseas editar la notificación?';

            var boton1 = 'Sí';

            var boton2 = 'No';

            if (lang === 'en') {

                titulo = 'Are you sure you want to edit the notification?';

                boton1 = 'Yes';

                boton2 = 'No';

            }



            Swal.fire({

                title: titulo,

                icon: 'warning',

                showCancelButton: true,

                confirmButtonColor: '#3085d6',

                cancelButtonColor: '#d33',

                confirmButtonText: boton1,

                cancelButtonText: boton2

            }).then((result) => {

                if (result.value) {



                    var griddd = document.getElementById("EditarContactos").ej2_instances[0];

                    griddd.refresh();

                    var lista_contactos = griddd.dataSource;

                    var idPerfilNotificacion = 0;

                    var validar = 0;

                    //document.getElementById('form_agregar').submit();



                    $.ajax({

                        type: "POST",

                        url: '@Url.Action("EditarDatosNotificacion", "ConfiguracionViajes")',

                        dataType: 'json',

                        async: false,

                        data: {

                            id_perfil_notificacion: idPerfilNotificacionOculto.value,

                            commodity_editar: commodity_editar.value,

                            frecuencia_editar: frecuencia_editar.value,

                            variacion_sup_temp_editar: variacion_sup_temp_editar.value,

                            variacion_inf_temp_editar: variacion_inf_temp_editar.value,

                        },

                        success: function (respuesta) {



                            validar = respuesta;//.idPerfilNotificacion;

                            //validar = respuesta.validar;

                        }

                    });



                    if (lista_contactos.length > 0 && validar != -1 && validar != 0) {



                        lista_contactos.forEach(



                            element => $.ajax({

                                type: "POST",

                                url: '@Url.Action("CargaContactoNotificacion", "ConfiguracionViajes")',

                                dataType: 'json',

                                async: false,

                                data: {

                                    idPerfilNotificacion: idPerfilNotificacionOculto.value,

                                    cargo: element.cargo_contacto,

                                    empresa: element.empresa_contacto,

                                    nombre: element.nombre_contacto,

                                    email: element.email_contacto,

                                }

                            })

                        );



                        griddd.refresh();

                    }



                    if (validar == 0) {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 7;

                    } else if (validar == -1) {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 9; //ya existe el commodity en bd

                    } else {

                        var str = window.location.href;

                        var res = str.split("?");

                        console.log(res[0]);

                        var urlString = res[0];

                        location.href = urlString + "?desplegarMensaje=" + 8;

                    }

                }

            });

        }

    });









    $(document).ready(function () {



        if (lang === 'en') {

            document.getElementById("TooltipInformativo").ej2_instances[0].properties.content = 'bla bla bla en inglés';

            document.getElementById("TooltipAgregarOtraCondicion").ej2_instances[0].properties.content = 'Add / Remove second condition';

            document.getElementById("TooltipTipoCondicion").ej2_instances[0].properties.content = 'Select (AND) if both options must be fulfilled, and (OR) if only one is sufficient to complete the trip.';

            document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> AND";

        }

        else {

            document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> Y";

        }



        var urlString = window.location.href;

        let url = new URL(urlString);

        let searchString = url.search.slice(1);

        let searchParams = new URLSearchParams(searchString);

        let inputParam = 'desplegarMensaje';



        if (searchParams.has(inputParam)) {



            if (searchParams.get(inputParam) == 3) {

                desplegarMensajeEliminar();

            }

            else if (searchParams.get(inputParam) == 4) {

                desplegarMensajeEliminarError();

            }

            else if (searchParams.get(inputParam) == 5) {

                desplegarMensajeCreadoExitosamente();

            }

            else if (searchParams.get(inputParam) == 6) {

                desplegarMensajeCreadoError();

            }

            else if (searchParams.get(inputParam) == 7) {

                desplegarMensajeActualizadoError();

            }

            else if (searchParams.get(inputParam) == 8) {

                desplegarMensajeActualizadoExitosamente();

            }

            else if (searchParams.get(inputParam) == 9) {

                desplegarMensajeExisteCommodity();

            }

        }



        $.ajax({

            type: "POST",

            async: false,

            url: '@Url.Action("verConfiguracionFinViaje", "ConfiguracionViajes")',

            success: function (list) {



                if (list.length > 0) {

                    var prueba = document.getElementById("switch_finalizacion_automatica").ej2_instances[0].checked = true;

                    document.getElementById("div-finalizacion-automatica-viajes").style.display = "block";



                    $.each(list, function (index, value) {



                        if (index == 0) {

                            toastObj.show(toasts[0]);

                            if (value.id_condicion == 1) document.getElementById('condiciones_finalizacion_viajes').ej2_instances[0].index = 0;

                            else if (value.id_condicion == 4) document.getElementById('condiciones_finalizacion_viajes').ej2_instances[0].index = 1;

                        }

                        else if (index == 1) {

                            document.getElementById("btn-otra-condicion").innerHTML = "-";

                            document.getElementById("div-condiciones-fin-viajes2").style.display = "block";

                            document.getElementById("boton-tipo-condicion").style.display = "block";



                            if (lang === 'en') {

                                if (value.grupo == 1) { document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> AND"; }

                                else if (value.grupo == 2) { document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> OR"; }

                            }

                            else {

                                if (value.grupo == 1) { document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> Y"; }

                                else if (value.grupo == 2) { document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> O"; }

                            }



                            if (value.id_condicion == 1) document.getElementById('condiciones_finalizacion_viajes2').ej2_instances[0].index = 0;

                            else if (value.id_condicion == 4) document.getElementById('condiciones_finalizacion_viajes2').ej2_instances[0].index = 1;

                        }



                    });



                    document.getElementById("div-btn-guardar-finalizacion-viajes").style.display = "none";

                    document.getElementById("div-btn-editar-finalizacion-viajes").style.display = "block";

                }

            }

        });

    });





    function CambioCondicionFinViajes1(args) {

        var div_condiciones = document.getElementById('div-condiciones-fin-viajes1').childNodes;

        div_condiciones[1].style.borderColor = "#ced4da";



        if (args.value == 2) {

            document.getElementById("ingresar-fecha-condicion1").style.display = "none";

            document.getElementById("ingresar-cantidad-condicion1").style.display = "block";

        }

        else if (args.value == 3) {

            document.getElementById("ingresar-cantidad-condicion1").style.display = "none";

            document.getElementById("ingresar-fecha-condicion1").style.display = "block";

        }

        else {

            document.getElementById("ingresar-cantidad-condicion1").style.display = "none";

            document.getElementById("ingresar-fecha-condicion1").style.display = "none";

        }

    }



    function CambioCondicionFinViajes2(args) {



        var div_condiciones = document.getElementById('div-condiciones-fin-viajes2').childNodes;

        div_condiciones[1].style.borderColor = "#ced4da";



        if (args.value == 2) {

            document.getElementById("ingresar-fecha-condicion2").style.display = "none";

            document.getElementById("ingresar-cantidad-condicion2").style.display = "block";

        }

        else if (args.value == 3) {

            document.getElementById("ingresar-cantidad-condicion2").style.display = "none";

            document.getElementById("ingresar-fecha-condicion2").style.display = "block";

        }

        else {

            document.getElementById("ingresar-cantidad-condicion2").style.display = "none";

            document.getElementById("ingresar-fecha-condicion2").style.display = "none";

        }

    }



    function accion_switch(args)

    {

        var prueba = document.getElementById("switch_finalizacion_automatica").ej2_instances[0];

        if (args.checked == true) {

            document.getElementById("div-finalizacion-automatica-viajes").style.display = "block";

        }

        else

       {

            document.getElementById("div-finalizacion-automatica-viajes").style.display = "none";

        }

    }



    $("#btn-otra-condicion").click(function () {

        var valor = document.getElementById("btn-otra-condicion").innerHTML;

        if (valor === "+") {

            document.getElementById("btn-otra-condicion").innerHTML = "-";

            document.getElementById("div-condiciones-fin-viajes2").style.display = "block";

            document.getElementById("boton-tipo-condicion").style.display = "block";

        }

        else {

            document.getElementById("btn-otra-condicion").innerHTML = "+";

            document.getElementById("div-condiciones-fin-viajes2").style.display = "none";

            document.getElementById("boton-tipo-condicion").style.display = "none";

        }

    });



    $("#btn-tipo-condicion").click(function () {

        if (lang === 'en') {

            var valor_completo = document.getElementById("btn-tipo-condicion").innerHTML;

            var valor = valor_completo.substring(valor_completo.length - 3, valor_completo.length);



            if (valor === "AND") {

                document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> OR";

            }

            else {

                document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> AND";

            }

        }

        else {

            var valor_completo = document.getElementById("btn-tipo-condicion").innerHTML;

            var valor = valor_completo.substring(valor_completo.length - 1, valor_completo.length);



            if (valor === "Y") {

                document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> O";

            }

            else {

                document.getElementById("btn-tipo-condicion").innerHTML = "<span class='e-btn-icon fa fa-exchange e-icon-left'></span> Y";

            }

        }







    });



    function accionGuardarCondicionFinalizacionViajes() {

        var condiciones1 = document.getElementById('condiciones_finalizacion_viajes').ej2_instances[0];

        var condiciones2 = document.getElementById('condiciones_finalizacion_viajes2').ej2_instances[0];

        var valor_completo = document.getElementById("btn-tipo-condicion").innerHTML;

        var tipo_condicion = valor_completo.substring(valor_completo.length - 1, valor_completo.length);



        if (condiciones1.value == null) {



            var titulo = 'Oops...';

            var texto = 'Debe ingresar alguna condición';

            if (lang === 'en') {

                titulo = 'Oops...';

                texto = 'You must enter some condition';

            }



            Swal.fire({

                icon: 'error',

                title: titulo,

                text: texto,

            });



            var div_condiciones = document.getElementById('div-condiciones-fin-viajes1').childNodes;

            div_condiciones[1].style.borderColor = "red";

        }

        else {

            var boton_otra_condicion = document.getElementById("btn-otra-condicion").innerHTML;

            if (boton_otra_condicion === "+") {

                $.ajax({

                    type: "POST",

                    async: false,

                   url: '@Url.Action("agregarConfiguracionFinViaje", "ConfiguracionViajes")',

                    data: {

                        condicion1: parseInt(condiciones1.value),

                        tipo_condicion: 0,

                        condicion2: 0

                    },

                    success: function (response) {

                        if (response == 1 || response == 2) {



                            var titulo = '¡Muy Bien!';

                            var texto = 'La configuración de finalización de viajes ha sido guardada correctamente.';

                            if (lang === 'en') {

                                titulo = 'Very Well!';

                                texto = 'Trip completion settings have been saved successfully.';

                            }



                            Swal.fire({

                                icon: 'success',

                                title: titulo,

                                text: texto,

                            });

                        }

                        else {

                            var titulo = 'Oops...';

                            var texto = '¡Lo sentimos! No se logró completar la operación';

                            if (lang === 'en') {

                                titulo = 'Oops...';

                                texto = 'We are sorry! Operation failed to complete';

                            }



                            Swal.fire({

                                icon: 'error',

                                title: titulo,

                                text: texto,

                            });

                        }

                    }

                });

            }

            else {

                if (condiciones2.value == null) {

                    var titulo = 'Oops...';

                    var texto = 'Debe ingresar la segunda condición';

                    if (lang === 'en') {

                        titulo = 'Oops...';

                        texto = 'You must enter the second condition';

                    }



                    Swal.fire({

                        icon: 'error',

                        title: titulo,

                        text: texto,

                    });



                    var div_condiciones2 = document.getElementById('div-condiciones-fin-viajes2').childNodes;

                    div_condiciones2[1].style.borderColor = "red";

                }

                else {



                    $.ajax({

                        type: "POST",

                        async: false,

                        url: '@Url.Action("agregarConfiguracionFinViaje", "ConfiguracionViajes")',

                        data: {

                            condicion1: parseInt(condiciones1.value),

                            tipo_condicion: tipo_condicion,

                            condicion2: parseInt(condiciones2.value)

                        },

                        success: function (response) {

                            if (response == 1 || response == 2) {

                                var titulo = '¡Muy Bien!';

                                var texto = 'La configuración de finalización de viajes ha sido guardada correctamente.';

                                if (lang === 'en') {

                                    titulo = 'Very Well!';

                                    texto = 'Trip completion settings have been saved successfully.';

                                }



                                Swal.fire({

                                    icon: 'success',

                                    title: titulo,

                                    text: texto,

                                });

                            }

                            else {

                                var titulo = 'Oops...';

                                var texto = '¡Lo sentimos! No se logró completar la operación';

                                if (lang === 'en') {

                                    titulo = 'Oops...';

                                    texto = 'We are sorry! Operation failed to complete';

                                }



                                Swal.fire({

                                    icon: 'error',

                                    title: titulo,

                                    text: texto,

                                });

                            }

                        }

                    });

                }

            }

        }

    }





    function accionEditarCondicionFinalizacionViajes() {

        var condiciones1 = document.getElementById('condiciones_finalizacion_viajes').ej2_instances[0];

        var condiciones2 = document.getElementById('condiciones_finalizacion_viajes2').ej2_instances[0];

        var valor_completo = document.getElementById("btn-tipo-condicion").innerHTML;

        var tipo_condicion = valor_completo.substring(valor_completo.length - 1, valor_completo.length);



        if (condiciones1.value == null) {

            var titulo = 'Oops...';

            var texto = 'Debe ingresar alguna condición';

            if (lang === 'en') {

                titulo = 'Oops...';

                texto = 'You must enter some condition';

            }



            Swal.fire({

                icon: 'error',

                title: titulo,

                text: texto,

            });



            var div_condiciones = document.getElementById('div-condiciones-fin-viajes1').childNodes;

            div_condiciones[1].style.borderColor = "red";

        }

        else {

            var boton_otra_condicion = document.getElementById("btn-otra-condicion").innerHTML;

            if (boton_otra_condicion === "+") {

                $.ajax({

                    type: "POST",

                    async: false,

                    url: '@Url.Action("editarConfiguracionFinViaje", "ConfiguracionViajes")',

                    data: {

                        condicion1: parseInt(condiciones1.value),

                        tipo_condicion: 0,

                        condicion2: 0

                    },

                    success: function (response) {

                        if (response == 1 || response == 2) {

                            var titulo = '¡Muy Bien!';

                            var texto = 'La configuración de finalización de viajes ha sido guardada correctamente.';

                            if (lang === 'en') {

                                titulo = 'Very Well!';

                                texto = 'Trip completion settings have been saved successfully.';

                            }



                            Swal.fire({

                                icon: 'success',

                                title: titulo,

                                text: texto,

                            });

                        }

                        else {

                            var titulo = 'Oops...';

                            var texto = '¡Lo sentimos! No se logró completar la operación';

                            if (lang === 'en') {

                                titulo = 'Oops...';

                                texto = 'We are sorry! Operation failed to complete';

                            }



                            Swal.fire({

                                icon: 'error',

                                title: titulo,

                                text: texto,

                            });

                        }

                    }

                });

            }

            else {

                if (condiciones2.value == null) {

                    var titulo = 'Oops...';

                    var texto = 'Debe ingresar la segunda condición';

                    if (lang === 'en') {

                        titulo = 'Oops...';

                        texto = 'You must enter the second condition';

                    }



                    Swal.fire({

                        icon: 'error',

                        title: titulo,

                        text: texto,

                    });



                    var div_condiciones2 = document.getElementById('div-condiciones-fin-viajes2').childNodes;

                    div_condiciones2[1].style.borderColor = "red";

                }

                else {

                    $.ajax({

                        type: "POST",

                        async: false,

                        url: '@Url.Action("editarConfiguracionFinViaje", "ConfiguracionViajes")',

                        data: {

                            condicion1: parseInt(condiciones1.value),

                            tipo_condicion: tipo_condicion,

                            condicion2: parseInt(condiciones2.value)

                        },

                        success: function (response) {

                            if (response == 1 || response == 2) {

                                var titulo = '¡Muy Bien!';

                                var texto = 'La configuración de finalización de viajes ha sido guardada correctamente.';

                                if (lang === 'en') {

                                    titulo = 'Very Well!';

                                    texto = 'Trip completion settings have been saved successfully.';

                                }



                                Swal.fire({

                                    icon: 'success',

                                    title: titulo,

                                    text: texto,

                                });

                            }

                            else {

                                var titulo = 'Oops...';

                                var texto = '¡Lo sentimos! No se logró completar la operación';

                                if (lang === 'en') {

                                    titulo = 'Oops...';

                                    texto = 'We are sorry! Operation failed to complete';

                                }



                                Swal.fire({

                                    icon: 'error',

                                    title: titulo,

                                    text: texto,

                                });

                            }

                        }

                    });

                }

            }

        }

    }



    function formatDate(date) {

        if (date != null) {

            var fecha = date.substring(0, 10);

            var dia = date.substring(0, 2);

            var mes = date.substring(3, 5);

            var ano = date.substring(6, 10);

            return dia + "/" + mes + "/" + ano;

        } else {

            return "";

        }

    }



    function accionEditarNotificacion(params) {

        var params = params.value.split("-");

        var idPerfilNotificacion = params[0];



        //limpiarOcultar();

        // HabilitarCampos_agregar();

        //LlenarCamposNotificacion(idPerfilNotificacion);



        //$('#ModalEditarNotificacion').trigger('click');

    }



    function accionOnOff(params) {

        var params = params.value.split("-");

        var idPerfilNotificacion = params[0];

        var estado = params[1];



        $.ajax({

            type: "POST",

            url: '@Url.Action("ActualizarEstadoNotificacion", "ConfiguracionViajes")',

            dataType: 'json',

            async: false,

            data: {

                idPerfilNotificacion: idPerfilNotificacion,

                estadoNotificacion: estado

            },

            success: function (response) {

                if (response > 0) {

                    var str = window.location.href;

                    var res = str.split("?");

                    console.log(res[0]);

                    var urlString = res[0];

                    location.href = urlString + "?desplegarMensaje=" + 8;

                } else if (response == 0) {

                    var str = window.location.href;

                    var res = str.split("?");

                    console.log(res[0]);

                    var urlString = res[0];

                    location.href = urlString + "?desplegarMensaje=" + 7;

                }

            }

        });



    }



    function accionEditarPerfilNotificacion(params) {

        var params = params.value.split("-");

        var idPerfilNotificacion = params[0];



        var commodity_editar = document.getElementById("commodity_editar").ej2_instances[0];

        var frecuencia_editar = document.getElementById("frecuencia_editar").ej2_instances[0];



        var variacion_sup_temp_editar = document.getElementById("variacion_sup_temp_editar").ej2_instances[0];

        var variacion_inf_temp_editar = document.getElementById("variacion_inf_temp_editar").ej2_instances[0];



        var idPerfilNotificacionOculto = document.getElementById("idPerfilNotificacion").ej2_instances[0];



        idPerfilNotificacionOculto.value = idPerfilNotificacion;



        $.ajax({

            type: "POST",

            url: '@Url.Action("ObtenerDatosNotificacion", "ConfiguracionViajes")',

            dataType: 'json',

            async: false,

            data: { idPerfilNotificacion: idPerfilNotificacion },

            success: function (response) {



                commodity_editar.value = response.commodity;

                frecuencia_editar.value = response.frecuencia;

                variacion_sup_temp_editar.value = response.variacion_sup_temp;

                variacion_inf_temp_editar.value = response.variacion_inf_temp;

                //contactos faaltaria

                var gridd = document.getElementById("EditarContactos").ej2_instances[0];

                gridd.dataSource = response.contactos;

                gridd.refresh();

            }

        });

        variacion_inf_temp_editar.value = variacion_inf_temp_editar.value;

        $('#ModalEditarNotificacion').trigger('click');

    }







    function accionEliminarPerfilNotificacion(params) {

        var params = params.value.split("-");

        var idPerfilNotificacion = params[0];



        var titulo = '¿Seguro que deseas eliminar el perfil de notificaciones y sus respectivos contactos asociados?';

        var boton1 = 'Sí';

        var boton2 = 'No';

        if (lang === 'en') {

            titulo = ' ?';

            boton1 = 'Yes';

            boton2 = 'No';

        }



        Swal.fire({

            title: titulo,

            icon: 'warning',

            showCancelButton: true,

            confirmButtonColor: '#3085d6',

            cancelButtonColor: '#d33',

            confirmButtonText: boton1,

            cancelButtonText: boton2

        }).then((result) => {

            if (result.value) {



                $.ajax({

                    type: "POST",

                    url: '@Url.Action("EliminarPerfilNotificacion", "ConfiguracionViajes")',

                    dataType: 'json',

                    data: { idPerfilNotificacion: idPerfilNotificacion },

                    success: function (response) {

                        if (response > 0) {

                            var str = window.location.href;

                            var res = str.split("?");

                            console.log(res[0]);

                            var urlString = res[0];

                            location.href = urlString + "?desplegarMensaje=" + 3;

                        } else if (response == 0) {

                            var str = window.location.href;

                            var res = str.split("?");

                            console.log(res[0]);

                            var urlString = res[0];

                            location.href = urlString + "?desplegarMensaje=" + 4;

                        }

                    }

                });







            }

        });



    }



    function desplegarMensajeEliminar() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[1]);

        }, 500);

    }

    function desplegarMensajeEliminarError() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[2]);

        }, 500);

    }

    function desplegarMensajeCreadoExitosamente() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[3]);

        }, 500);

    }

    function desplegarMensajeCreadoError() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[4]);

        }, 500);

    }

    function desplegarMensajeEditadoExitosamente() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[5]);

        }, 500);

    }

    function desplegarMensajeActualizadoError() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[6]);

        }, 500);

    }

    function desplegarMensajeActualizadoExitosamente() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[7]);

        }, 500);

    }

    function desplegarMensajeExisteCommodity() {

        var toastObj = document.getElementById('toast_type').ej2_instances[0];

        setTimeout(function () {

            toastObj.target = document.body;

            toastObj.show(toasts[8]);

        }, 500);

    }



</script>





<style>
    .invalid {
        border: 1px solid red !important;
    }



    .e-card {
        font-family: Gotham Medium !important;
    }



    .e-tab {
        font-family: Gotham Medium !important;
    }



    .e-tab-text {
        font-family: Gotham Medium !important;
    }



    .e-control {
        font-family: Gotham Medium !important;
    }



    .e-treeview.e-list-text {
        color: white !important;
        font-family: Gotham Medium !important;
    }



    .e-float-text {
        font-family: Gotham Medium !important;
    }



    p {
        margin: 0 0 0px;
        margin-bottom: 0px;
    }



    .h4 {
        color: black !important;
        font-family: Gotham Medium !important;
    }



    .h5 {
        color: black !important;
        font-family: Gotham Medium !important;
    }



    .main-content {
        background: #F7F7F7 !important;
        font-family: Gotham Medium !important;
    }



    #Emptext {
        top: -12px;
        left: 41px;
        position: relative;
    }



    .e-grid.e-rtl #Emptext {
        top: -12px;
        left: -41px;
        position: relative;
    }



    .empimg {
        height: 27px;
        width: 29px;
        border-radius: 14px;
    }



    .gm-style-iw {
        height: 95px;
        width: 60%;
        padding-left: 20px;
        margin-left: 40px;
        float: left;
        line-height: 25px;
    }





    td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
    }



    .e-hightheme td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
        color: white;
    }



    .e-bigger .e-grid .statustxt {
        position: relative;
        top: -2px;
    }



    .rating .star {
        font-size: 132%;
        color: lightgrey;
    }



        .rating .star.checked {
            color: #ffa600;
        }



    td.e-rowcell .statustxt.e-activecolor {
        color: #00cc00;
        position: relative;
        top: 9px;
    }



    td.e-rowcell .statustxt.e-inactivecolor {
        color: #e60000;
        position: relative;
        top: 9px;
    }



    .statustemp.e-inactivecolor {
        background-color: #ffd7cc;
    }



    .statustemp.e-activecolor {
        background-color: #ccffcc;
    }



    .statustxt.e-activecolor {
        color: #00cc00;
    }



    .statustxt.e-inactivecolor {
        color: #e60000;
    }



    #Trusttext {
        position: relative;
        top: 1px;
    }



    .e-image {
        height: 13px;
        width: 14px;
    }



    .statustemp.e-inactivecolor {
        width: 64px;
    }



    .statustemp.e-activecolor {
        width: 57px;
    }



    .statustemp {
        position: relative;
        height: 19px;
        border-radius: 5px;
        text-align: center;
    }



    .highcontrast #msg {
        color: #FFFFFF;
    }





    #msg {
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
        font-size: 14px;
        font-weight: 400;
        opacity: 0.95;
        color: #333;
        float: right;
        margin-top: 3px;
    }



    @@media only screen and (max-width: 370px) {

        #msg {
            float: left;
            margin-top: 3px;
        }



        #GridOverview {
            margin-top: 36px;
        }
    }



    #samplecontainer {
        padding-top: 5px;
    }



    #myProgress {
        position: relative;
        height: 18px;
        width: 10em;
        text-align: left;
        background-color: white;
    }



    .highcontrast .e-grid #myProgress {
        background-color: black;
    }



    #myBar {
        position: absolute;
        width: 10%;
        height: 100%;
        background-color: #00b300;
    }



        #myBar.progressdisable {
            background-color: #df2222;
        }



    #label {
        position: relative;
        left: 10px;
        line-height: 18px;
        font-size: 10px;
        color: white;
    }
</style>

<style>
    .pac-container {
        z-index: 10000 !important;
    }
</style>







<style>
    .e-card {
        font-family: Gotham Medium !important;
    }



    .e-tab {
        font-family: Gotham Medium !important;
    }



    .e-tab-text {
        font-family: Gotham Medium !important;
    }



    .e-control {
        font-family: Gotham Medium !important;
    }



    .e-treeview.e-list-text {
        color: white !important;
        font-family: Gotham Medium !important;
    }



    .e-grid .e-filtered::before {
        color: #4ab973 !important;
    }



    p {
        margin: 0 0 0px;
        margin-bottom: 0px;
    }



    .h4 {
        color: black !important;
        font-family: Gotham Medium !important;
    }



    .h5 {
        color: black !important;
        font-family: Gotham Medium !important;
    }



    .main-content {
        background: #F7F7F7 !important;
        font-family: Gotham Medium !important;
    }



    #Emptext {
        top: -12px;
        left: 41px;
        position: relative;
    }



    .e-grid.e-rtl #Emptext {
        top: -12px;
        left: -41px;
        position: relative;
    }



    .empimg {
        height: 27px;
        width: 29px;
        border-radius: 14px;
    }



    .gm-style-iw {
        height: 95px;
        width: 60%;
        padding-left: 20px;
        margin-left: 40px;
        float: left;
        line-height: 25px;
    }





    td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
    }



    .e-hightheme td.e-rowcell.e-selectionbackground.e-active {
        background-color: transparent;
        color: white;
    }



    .e-bigger .e-grid .statustxt {
        position: relative;
        top: -2px;
    }



    .rating .star {
        font-size: 132%;
        color: lightgrey;
    }



        .rating .star.checked {
            color: #ffa600;
        }



    td.e-rowcell .statustxt.e-activecolor {
        color: #00cc00;
        position: relative;
        top: 9px;
    }



    td.e-rowcell .statustxt.e-inactivecolor {
        color: #e60000;
        position: relative;
        top: 9px;
    }



    .statustemp.e-inactivecolor {
        background-color: #ffd7cc;
    }



    .statustemp.e-activecolor {
        background-color: #ccffcc;
    }



    .statustxt.e-activecolor {
        color: #00cc00;
    }



    .statustxt.e-inactivecolor {
        color: #e60000;
    }



    #Trusttext {
        position: relative;
        top: 1px;
    }



    .e-image {
        height: 13px;
        width: 14px;
    }



    .statustemp.e-inactivecolor {
        width: 64px;
    }



    .statustemp.e-activecolor {
        width: 57px;
    }



    .statustemp {
        position: relative;
        height: 19px;
        border-radius: 5px;
        text-align: center;
    }



    .highcontrast #msg {
        color: #FFFFFF;
    }





    #msg {
        font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;
        font-size: 14px;
        font-weight: 400;
        opacity: 0.95;
        color: #333;
        float: right;
        margin-top: 3px;
    }



    @@media only screen and (max-width: 370px) {

        #msg {
            float: left;
            margin-top: 3px;
        }



        #GridOverview {
            margin-top: 36px;
        }
    }



    #samplecontainer {
        padding-top: 5px;
    }



    #myProgress {
        position: relative;
        height: 18px;
        width: 10em;
        text-align: left;
        background-color: white;
    }



    .highcontrast .e-grid #myProgress {
        background-color: black;
    }



    #myBar {
        position: absolute;
        width: 10%;
        height: 100%;
        background-color: #00b300;
    }



        #myBar.progressdisable {
            background-color: #df2222;
        }



    #label {
        position: relative;
        left: 10px;
        line-height: 18px;
        font-size: 10px;
        color: white;
    }



    .modal-dialog {
        right: auto;
        left: 15%;
        width: 2000px;
        padding-top: 30px;
        padding-bottom: 30px;
    }



    .modal {
        position: fixed;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
    }



    .e-content {
        min-height: 300px;
    }
</style>